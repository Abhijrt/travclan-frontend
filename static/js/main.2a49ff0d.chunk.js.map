{"version":3,"sources":["components/Loading.js","components/Customer.js","components/NavBar.js","components/CustomerDetail.js","components/App.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","marginLeft","spacing","circle","position","top","left","Loading","classes","className","CircularProgress","Customer","props","customerData","useState","pageNumber","setPageNumber","checkedB","increasing","decreasing","state","setState","getMaxBid","bids","reduce","acc","cur","amount","sortCustomerByBidAmountDecreasing","sort","a","b","bid1","bid2","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","action","hover","TableRow","table","width","margin","img","toggleBtn","padding","alignItems","float","toggleBtn1","link","textDecoration","name","paddingLeft","length","reverse","pagesVisited","displayUsers","slice","map","customer","to","id","component","scope","Avatar","alt","firsname","src","avatarUrl","firstname","lastname","align","email","phone","hasPremium","pageCount","Math","ceil","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","event","target","TableContainer","Paper","Table","aria-label","TableHead","TableBody","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","NavBar","flexGrow","title","AppBar","Toolbar","Typography","variant","CustomerDetail","customerDetail","setCustomerDetail","useEffect","url","match","params","customer_id","fetch","method","headers","then","response","json","data","maxWidth","media","height","paddingTop","avatar","backBtn","textAlign","background","marginTop","marginBottom","borderRadius","paddingBottom","icon","minWidth","error","Card","CardHeader","substring","subheader","CardMedia","image","bid","index","carTitle","App","setCustomerData","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a49ff0d.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  circle: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%'\n  }\n}));\n\nexport default function Loading() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress className={classes.circle}/>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Avatar } from '@material-ui/core';\nimport { FormGroup, FormControlLabel, Switch } from '@material-ui/core';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Loading from './Loading';\nimport ReactPaginate from 'react-paginate';\n\nfunction Customer(props) {\n\n    let  customerData  = props.customerData;\n    const [pageNumber, setPageNumber] = useState(0);\n    const [state, setState] = useState({\n        checkedB: false,\n        increasing: false,\n        decreasing: true\n    });\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    const handleSort = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    }\n\n    const getMinBid = (bids) => {\n        return bids.reduce((acc, cur) => {\n            return acc.amount > cur.amount ? cur : acc;\n        },{ amount: 100000000000 });\n    }\n\n    const getMaxBid = (bids) => {\n        return bids.reduce((acc, cur) => {\n            return acc.amount < cur.amount ? cur : acc;\n        },{ amount: 0 });\n    }\n\n    const sortCustomerByBidAmountDecreasing = (customerData) => {\n        return customerData.sort(function(a,b){\n            let bid1 = getMaxBid(a.bids);\n            let bid2 = getMaxBid(b.bids);\n            return  bid1.amount - bid2.amount;\n        })\n    }\n\n    const StyledTableCell = withStyles((theme) => ({\n        head: {\n          backgroundColor: theme.palette.common.black,\n          color: theme.palette.common.white,\n        },\n        body: {\n          fontSize: 14,\n        },\n    }))(TableCell);\n\n    const StyledTableRow = withStyles((theme) => ({\n        root: {\n          '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n          },\n        },\n    }))(TableRow);\n\n    const useStyles = makeStyles({\n        table: {\n          width: \"50%\",\n          margin: 'auto'\n        },\n        img: {\n           display: \"inline-block\"\n        },\n        toggleBtn: {\n            padding: 20,\n            alignItems: 'center',\n            width: '36%',\n            margin: 'auto',\n            float: 'right'\n        },\n        toggleBtn1: {\n            padding: 20,\n            alignItems: 'center',\n            width: '35%',\n            margin: 'auto',\n            float: 'right'\n        },\n        link: {\n            textDecoration: 'none'\n        },\n        name: {\n            position: 'relative',\n            top: -15,\n            paddingLeft: 10\n        }\n    });\n\n    const classes = useStyles();\n\n    if(customerData.length === 0) {\n        return <Loading/>\n    }\n\n    if(state.increasing) {\n        sortCustomerByBidAmountDecreasing(customerData);\n    }else{\n        customerData =  sortCustomerByBidAmountDecreasing(customerData).reverse();\n    }\n\n    const usersPerPage = 5;\n    const pagesVisited = pageNumber * usersPerPage;\n\n    const displayUsers = customerData.slice(pagesVisited, pagesVisited + usersPerPage).map(customer => {\n        return (\n            <StyledTableRow key={customer.id} >\n                <Link className={classes.link} to={\"/customer-detail/\" + customer.id}>\n                    <StyledTableCell component=\"th\" scope=\"row\" >\n                        <Avatar className={classes.img} alt={customer.firsname} src={customer.avatarUrl} />\n                        <span className={classes.name}>\n                            {customer.firstname}\n                            &nbsp;\n                            {customer.lastname}\n                        </span>\n                    </StyledTableCell>\n                </Link>\n                <StyledTableCell align=\"right\">{customer.email}</StyledTableCell>\n                <StyledTableCell align=\"right\">{customer.phone}</StyledTableCell>\n                <StyledTableCell align=\"right\">{customer.hasPremium ? \"True\" : \"False\"}</StyledTableCell>\n                <StyledTableCell align=\"right\">{state.checkedB ? getMinBid(customer.bids).amount : getMaxBid(customer.bids).amount}</StyledTableCell>\n            </StyledTableRow>\n        )\n    });\n    \n    const pageCount = Math.ceil(customerData.length / usersPerPage);\n\n    const changePage = ({ selected }) => {\n        setPageNumber(selected);\n    }\n\n    return (\n      <div>\n        <FormGroup row className={classes.toggleBtn}>\n            Show Min/Max bid &nbsp;\n            <FormControlLabel\n                control={\n                <Switch\n                    checked={state.checkedB}\n                    onChange={handleChange}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                />\n                }\n            />\n        </FormGroup>\n        <FormGroup row className={classes.toggleBtn1}>\n            Sort by Bid &nbsp;\n            <FormControlLabel\n                control={\n                <Switch\n                    checked={state.increasing}\n                    onChange={handleSort}\n                    name=\"increasing\"\n                    color=\"primary\"\n                />\n                }\n            />\n        </FormGroup>\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"customized table\">\n                <TableHead>\n                    <TableRow>\n                        <StyledTableCell >Customer Name</StyledTableCell>\n                        <StyledTableCell align=\"right\">Email</StyledTableCell>\n                        <StyledTableCell align=\"right\">Phone</StyledTableCell>\n                        <StyledTableCell align=\"right\">Premium</StyledTableCell>\n                        <StyledTableCell align=\"right\">{ state.checkedB ? \"Min\" : \"Max\"} Bid</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {displayUsers}\n                    <ReactPaginate\n                        previousLabel={\"Previous\"}\n                        nextLabel={\"Next\"}\n                        pageCount={pageCount}\n                        onPageChange={changePage}\n                        containerClassName={\"paginationBttns\"}\n                        previousLinkClassName={\"previousBttn\"}\n                        nextLinkClassName={\"nextBttn\"}\n                        disabledClassName={\"paginationDisabled\"}\n                        activeClassName={\"paginationActive\"}\n                    />\n                </TableBody>\n            </Table>\n        </TableContainer>\n      </div>\n    );\n}\n  \nexport default Customer;","import { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\n\nfunction NavBar() {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          flexGrow: 1,\n        },\n        title: {\n          flexGrow: 1,\n        },\n    }));\n    const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            TravClan Customer Data\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBar;","import { useEffect, useState } from 'react';\nimport  { Link } from 'react-router-dom';\nimport { Card, CardHeader, CardMedia, Avatar } from '@material-ui/core';\nimport KeyboardBackspaceSharp from '@material-ui/icons/KeyboardBackspaceSharp';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Loading from './Loading';\n\nfunction CustomerDetail(props) {\n\n    const [customerDetail, setCustomerDetail] = useState([]);\n\n    useEffect(() => {\n        const url = 'https://intense-tor-76305.herokuapp.com/merchants?id=' + props.match.params.customer_id;\n        fetch(url,{\n            method: 'GET',\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n          }).then((response) => response.json())\n          .then((data) => {\n            setCustomerDetail(data[0]);\n          });\n    },[]);\n\n    const StyledTableCell = withStyles((theme) => ({\n        head: {\n          backgroundColor: theme.palette.common.black,\n          color: theme.palette.common.white,\n        },\n        body: {\n          fontSize: 14,\n        },\n    }))(TableCell);\n\n    const StyledTableRow = withStyles((theme) => ({\n        root: {\n          '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n          },\n        },\n    }))(TableRow);\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            maxWidth: 345,\n            margin: 'auto'\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n        },\n        avatar: {\n            backgroundColor: '#3f51b5',\n        },\n        backBtn: {\n            textAlign: 'center',\n            background: '#3f51b5',\n            width: \"6%\",\n            margin: 'auto',\n            marginTop: 30,\n            marginBottom: 30,\n            borderRadius: 12,\n            paddingBottom: 10\n        },\n        link: {\n            textDecoration: 'none',\n            color: 'white'\n        },\n        icon: {\n            position: 'relative',\n            top: '5px'\n        },\n        bids: {\n            margin: 50,\n        },\n        table: {\n            minWidth: 700,\n            width: \"50%\",\n            margin: 'auto'\n        },\n        error: {\n            background: '#3f51b5',\n            color: 'white',\n            padding: 10,\n            width: '50%',\n            margin: 'auto',\n            textAlign: 'center',\n            marginTop: 30\n        }\n    }));\n\n    const classes = useStyles();\n\n    if(customerDetail.length === 0) {\n        return <Loading/>;\n    }\n    return (\n        <div>\n            <Link to=\"/\" className={classes.link}>\n                <div className={classes.backBtn}>\n                    <KeyboardBackspaceSharp className={classes.icon}/> Back\n                </div>\n            </Link>\n            <Card className={classes.root}>\n                <CardHeader\n                    avatar={\n                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                            {customerDetail.firstname.substring(0,1)}\n                        </Avatar>\n                    }\n                    title={customerDetail.firstname + \" \" + customerDetail.lastname}\n                    subheader={customerDetail.email}\n                />\n                <CardMedia\n                    className={classes.media}\n                    image={customerDetail.avatarUrl}\n                    title={customerDetail.firstname}\n                />\n            </Card>\n            { customerDetail.bids.length ?\n                (<div className={classes.bids}>\n                    <TableContainer component={Paper}>\n                        <Table className={classes.table} aria-label=\"customized table\">\n                            <TableHead>\n                                <TableRow>\n                                    <StyledTableCell>S.No</StyledTableCell>\n                                    <StyledTableCell align=\"right\">Car Title</StyledTableCell>\n                                    <StyledTableCell align=\"right\">Amount</StyledTableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {customerDetail.bids.map((bid,index) => (\n                                <StyledTableRow key={bid.id} >\n                                    <StyledTableCell>{index}</StyledTableCell>\n                                    <StyledTableCell align=\"right\">{bid.carTitle}</StyledTableCell>\n                                    <StyledTableCell align=\"right\">{bid.amount}</StyledTableCell>\n                                </StyledTableRow>\n                            ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>)\n            : <div className={classes.error}>\n                Oh! You Don't have Any Bids\n            </div>  }\n        </div>\n    );\n}\n\nexport default CustomerDetail;","import { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Customer  from './Customer';\nimport NavBar from './NavBar';\nimport CustomerDetail from './CustomerDetail';\n\nfunction App() {\n\n  const [customerData, setCustomerData] = useState([]);\n\n  useEffect(() => {\n    const url = 'https://intense-tor-76305.herokuapp.com/merchants';\n    fetch(url,{\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    }).then((response) => response.json())\n    .then((data) => {\n      setCustomerData(data);\n    });\n  },[]);\n\n  return (\n    <Router>\n      <NavBar/>\n      <Switch>\n        <Route exact path=\"/\" render={() => {\n                         return <div>\n                           <Customer customerData={customerData} /> \n                         </div>}}\n        />\n        <Route exact path='/customer-detail/:customer_id' component={CustomerDetail} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}